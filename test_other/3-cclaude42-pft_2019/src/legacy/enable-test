#!/bin/sh
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    enable-test.sh                                     :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: gfielder <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/03/24 16:59:12 by gfielder          #+#    #+#              #
#    Updated: 2019/03/24 16:59:12 by gfielder         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# Below is an option to touch the test history when this script is complete
# Read the below before turning on

# Test history logging is only coherent when the test numbers do not change.
# For this reason, test_history.csv is removed by the makefile whenever
# unit_tests.c is strictly newer (there is an option to disable this, however).
# The enable-test and disable-test scripts modify unit_tests.c, so by default
# calling either of these scripts will trigger a removal. There is an option
# in each of these scripts to touch test_history.csv so that enabling and
# disabling tests do not trigger a history removal, but when using this option,
# the system can break if you add tests and then immediately call enable-test
# or disable-test. So if you do this, you must remove test_history.csv manually.
# This does not apply if you only add tests to the end of unit_tests.c, as this
# does not change any test numbers.
TOUCH_TEST_HISTORY=0

FILENAME=unit_tests.c
TEST_HISTORY_FILENAME=history.csv

if [ $# -eq 0 ]
then
	PATTERN=""
elif [ $# -ne 1 ]
then
	echo "usage: ./enable-test  search-pattern"
	echo "       search patterns are a single word, using * for wildcards. (Enclose in double quotes if using *, or escape the * eg \\*)"
	exit 1
else
	PATTERN=$(echo $1 | tr -d " \t\r\n")
fi

TOREGEX=$(echo $PATTERN | sed "s/[^a-zA-Z0-9_]/.\*/g")
NUM_ENABLED=$(grep -c "^[	 ]*int[	 ]*$TOREGEX.*(void)" $FILENAME | tr -d " \t\r\n")

if [ $NUM_ENABLED -eq 0 ]
then
	echo "No disabled tests were found matching the pattern \"$PATTERN*\"."
	exit 0
fi

sed -i .bak "s/^[	 ]*\(int[	 ]*$TOREGEX.*(void)\)/\1/g" $FILENAME
echo "Enabled $NUM_ENABLED tests matching the pattern \"$PATTERN*\"."

if [ $? -eq 0 ]
then
	rm $FILENAME.bak
	make -C $(dirname $0) fclean
else
 	echo "Error occurred while performing prefix-based sed operation. If any changes were made, the unit test file has been backed up to $FILENAME.bak. Please check your input and try again."
fi

if [[ $TOUCH_TEST_HISTORY -eq 1 ]] && [[ -f "$TEST_HISTORY_FILENAME" ]]
then
	touch $TEST_HISTORY_FILENAME
fi
